set(PLUGIN RemoteControl)
set(ARTEFACT WPEFramework${PLUGIN})

set(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_KEYMAP "keymap.json" CACHE STRING "Default keymap")
set(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS_KEYMAP "NexusIR.json" CACHE STRING "Nexus IR keymap")

set(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_RFCE_NAME "GreenPeak" CACHE STRING "Name of the device")
set(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_RFCE_REMOTE_ID "GPSTB" CACHE STRING "User string, used for greenpeak")
set(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_RFCE_MODULE "/lib/modules/misc/gpK5.ko" CACHE STRING "path to kernel module")
set(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_RFCE_NODE_ID 249 CACHE STRING "Node ID for the device to be created")


set(VERSION_MAJOR 1)
set(VERSION_MINOR 0)
set(VERSION ${VERSION_MAJOR}.${VERSION_MINOR})

message("Setting up ${ARTEFACT}")

find_package(Core REQUIRED)
find_package(Plugins REQUIRED)

add_library(${PLUGIN}
		Module.cpp
		RemoteControl.cpp
		RemoteAdministrator.cpp
		)

target_link_libraries(${PLUGIN}
		PRIVATE
		WPEFramework::Core
		WPEFramework::Plugins
		)

set_target_properties(${PLUGIN} PROPERTIES
		CXX_STANDARD 11
		CXX_STANDARD_REQUIRED YES
		FRAMEWORK FALSE
		OUTPUT_NAME ${ARTEFACT}
		)

find_package(NXServer)
find_package(VirtualInput)
find_package(RF4CE)

if(VirtualInput_FOUND)
	message(STATUS "Including VirtualInput support")
	target_link_libraries(${PLUGIN}
			PRIVATE
			    WPEFramework::VirtualInput)
	target_compile_definitions(${PLUGIN}
			PRIVATE
				VIRTUAL_INPUT_ENABLED)
endif()

if (WPEFRAMEWORK_PLUGIN_REMOTECONTROL_DEVINPUT)
	message(STATUS "Including dev input support")
	list(APPEND PLUGIN_DEPENDENCIES )
	target_link_libraries(${PLUGIN}
			PRIVATE
			    udev)
	target_sources(${PLUGIN}
			PRIVATE
			    LinuxDevice.cpp)
endif()

if (NXSERVER_FOUND)
	find_package(Nexus REQUIRED)
	target_link_libraries(${PLUGIN}
			PRIVATE
			    NEXUS::NEXUS
			    NEXUS::NXCLIENT)
	if (WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS)
		message(STATUS "Including Nexus IR support")
		target_compile_definitions(${PLUGIN}
				PRIVATE
					IR_ENABLED)
		target_sources(${PLUGIN}
				PRIVATE
					IRRemote.cpp)
		if(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_HOST)
			set(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS_KEYMAP "${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_HOST}-IRRemoteKeyMap-${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRMODE}.json")
		else(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_HOST)
			set(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS_KEYMAP "IRRemoteKeyMap-${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRMODE}.json")
		endif(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_HOST)
		if(NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/KeyMaps/${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS_KEYMAP}")
			set(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS_KEYMAP "IRRemoteKeyMap-${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRMODE}.json")
		endif()
	endif()
endif()

if(RF4CE_FOUND)
    message(STATUS "Including RF4CE support")
		add_definitions(${RF4CE_DEFINITIONS})
		add_definitions(-DGP_SCHED_EXTERNAL_MAIN)
        include_directories(${RF4CE_INCLUDE_DIRS})
        target_sources(${PLUGIN}
			PRIVATE
			    GreenPeak.cpp)
	target_link_libraries(${PLUGIN}
			PRIVATE
			    ${RF4CE_LIBRARIES})
endif()

if (WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS AND WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS_KEYMAP AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/KeyMaps/${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS_KEYMAP}" AND NOT IS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/KeyMaps/${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS_KEYMAP}")
	message("Nexus IR device key map file: " ${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS_KEYMAP})
	install(FILES KeyMaps/${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_IRNEXUS_KEYMAP} DESTINATION ${CMAKE_INSTALL_PREFIX}/share/WPEFramework/RemoteControl)
endif()

if (WPEFRAMEWORK_PLUGIN_REMOTECONTROL_DEVINPUT AND WPEFRAMEWORK_PLUGIN_REMOTECONTROL_DEVINPUT_KEYMAP AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/KeyMaps/${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_DEVINPUT_KEYMAP}" AND NOT IS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/KeyMaps/${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_DEVINPUT_KEYMAP}")
	message("LinuxDevice device key map file: " ${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_DEVINPUT_KEYMAP})
	install(FILES KeyMaps/${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_DEVINPUT_KEYMAP} DESTINATION ${CMAKE_INSTALL_PREFIX}/share/WPEFramework/RemoteControl)
endif()

if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/KeyMaps/${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_KEYMAP}" AND NOT IS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/KeyMaps/${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_KEYMAP}")
	message("Use keymap file: " ${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_KEYMAP})
	install(
		FILES KeyMaps/${WPEFRAMEWORK_PLUGIN_REMOTECONTROL_KEYMAP}
		DESTINATION ${CMAKE_INSTALL_PREFIX}/share/WPEFramework/RemoteControl)
else()
	set(WPEFRAMEWORK_PLUGIN_REMOTECONTROL_KEYMAP "keymap.json")
	install(
		FILES KeyMaps/keymap.json
		DESTINATION ${CMAKE_INSTALL_PREFIX}/share/WPEFramework/RemoteControl
		COMPONENT ${MODULE_NAME})
endif()

install(TARGETS ${PLUGIN}
		DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/wpeframework/plugins
		COMPONENT ${MODULE_NAME})

include(write_configuration)

write_configuration(${PLUGIN})
